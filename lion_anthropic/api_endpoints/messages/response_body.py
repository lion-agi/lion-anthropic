from typing import Literal

from pydantic import Field

from ..data_models import AnthropicEndpointResponseBody
from .responses.content import ResponseContent
from .responses.events import StopReason
from .responses.usage import Usage


class AnthropicMessageResponseBody(AnthropicEndpointResponseBody):
    """
    Model for responses from the Anthropic Messages API.

    The response includes the generated message, usage information, and metadata
    about how and why the generation stopped.

    Examples:
        >>> response = MessageResponse(
        ...     id="msg_123",
        ...     type="message",
        ...     role="assistant",
        ...     content=[
        ...         TextResponseContent(
        ...             type="text",
        ...             text="Hi, I'm Claude."
        ...         )
        ...     ],
        ...     model="claude-3-5-sonnet-20241022",
        ...     stop_reason=StopReason.END_TURN,
        ...     stop_sequence=None,
        ...     usage=Usage(
        ...         input_tokens=50,
        ...         output_tokens=100
        ...     )
        ... )
    """

    id: str = Field(
        ...,
        description="Unique object identifier. The format and length of IDs may change over time",
    )
    type: Literal["message"] = Field(
        "message", description="Object type. For Messages, this is always 'message'"
    )
    role: Literal["assistant"] = Field(
        "assistant",
        description="Conversational role of the generated message. This will always be 'assistant'",
    )
    content: list[ResponseContent] = Field(
        ...,
        description="Content generated by the model. This is an array of content blocks, "
        "each of which has a type that determines its shape",
    )
    model: str = Field(..., description="The model that handled the request")
    stop_reason: StopReason | None = Field(
        ...,
        description="The reason that we stopped generating. In non-streaming mode this value "
        "is always non-null. In streaming mode, it is null in the message_start "
        "event and non-null otherwise",
    )
    stop_sequence: str | None = Field(
        None,
        description="Which custom stop sequence was generated, if any. This value will be "
        "a non-null string if one of your custom stop sequences was generated",
    )
    usage: Usage = Field(..., description="Billing and rate-limit usage information")

    model_config = {
        "json_schema_extra": {
            "examples": [
                {
                    "id": "msg_123abc",
                    "type": "message",
                    "role": "assistant",
                    "content": [{"type": "text", "text": "Hi, I'm Claude."}],
                    "model": "claude-3-5-sonnet-20241022",
                    "stop_reason": "end_turn",
                    "stop_sequence": None,
                    "usage": {
                        "input_tokens": 50,
                        "output_tokens": 100,
                        "cache_creation_input_tokens": None,
                        "cache_read_input_tokens": None,
                    },
                },
                {
                    "id": "msg_456def",
                    "type": "message",
                    "role": "assistant",
                    "content": [
                        {
                            "type": "tool_use",
                            "id": "toolu_01D7FLrfh4GYq7yT1ULFeyMV",
                            "name": "get_stock_price",
                            "input": {"ticker": "AAPL"},
                        }
                    ],
                    "model": "claude-3-5-sonnet-20241022",
                    "stop_reason": "tool_use",
                    "stop_sequence": None,
                    "usage": {"input_tokens": 75, "output_tokens": 25},
                },
            ]
        }
    }


class AnthropicStreamMessageResponseBody(AnthropicEndpointResponseBody): ...
